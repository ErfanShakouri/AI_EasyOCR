# -*- coding: utf-8 -*-
"""easyocr_OCR_main.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lBJBYba_3N_JCcw9Lw73ibNgy2AIGyUc
"""

from google.colab import drive
import os
drive.mount('/content/drive')

"""# Simple Run"""

!pip install easyocr

import easyocr      # EasyOCR library for multilingual OCR

img_path = "/content/drive/MyDrive/Ai_Lab/Hand_Writing/Dataset/erfan_small/a12.jpg"

reader = easyocr.Reader(['fa']) # this needs to run only once to load the model into memory
result = reader.readtext(img_path)

result

"""#Simpe run_Show box"""

pip install supervision

import easyocr
import supervision as sv
import cv2
import numpy as np
from google.colab.patches import cv2_imshow

img_path1 = "/content/drive/MyDrive/Ai_Lab/Hand_Writing/Dataset/erfan_small/a12.jpg"

reader = easyocr.Reader(['fa']) # this needs to run only once to load the model into memory
result = reader.readtext(img_path1)

# Load image using OpenCV
image = cv2.imread(img_path1)

# Prepare lists for bounding boxes, confidences, class IDs, and labels
xyxy, confidences, class_ids, label = [], [], [], []

# Extract data from OCR result
for detection in result:
    bbox, text, confidence = detection[0], detection[1], detection[2]

    # Convert bounding box format
    x_min = int(min([point[0] for point in bbox]))
    y_min = int(min([point[1] for point in bbox]))
    x_max = int(max([point[0] for point in bbox]))
    y_max = int(max([point[1] for point in bbox]))

    # Append data to lists
    xyxy.append([x_min, y_min, x_max, y_max])
    label.append(text)
    confidences.append(confidence)
    class_ids.append(0)

# Convert to NumPy arrays
detections = sv.Detections(
    xyxy=np.array(xyxy),
    confidence=np.array(confidences),
    class_id=np.array(class_ids)
)

# Annotate image with bounding boxes and labels
box_annotator = sv.BoxAnnotator()
label_annotator = sv.LabelAnnotator()

annotated_image = box_annotator.annotate(scene=image, detections=detections)
annotated_image = label_annotator.annotate(scene=annotated_image, detections=detections, labels=label)

# Display and save the annotated image
sv.plot_image(image=annotated_image)
Output_1 = "/content/drive/MyDrive/Ai_Lab/Hand_Writing/Dataset/erfan_small/result1"
cv2.imwrite(Output_1, annotated_image)







